%dev.quarkus.http.port=8081

# Infinispan Server address
quarkus.infinispan-client.server-list=localhost:11222

# Authentication
quarkus.infinispan-client.auth-username=admin
quarkus.infinispan-client.auth-password=password

# Infinispan client intelligence
# Use BASIC as a Docker for Mac workaround
quarkus.infinispan-client.client-intelligence=BASIC


# Configure the Kafka broker location
kafka.bootstrap.servers=localhost:9092
quarkus.kafka-streams.topics=payment

# pass-through options
#kafka-streams.cache.max.bytes.buffering=10240
#kafka-streams.commit.interval.ms=1000
#kafka-streams.metadata.max.age.ms=500
#kafka-streams.auto.offset.reset=earliest
#kafka-streams.metrics.recording.level=DEBUG


mp.messaging.incoming.requests.connector=smallrye-kafka
mp.messaging.incoming.requests.topic=payment
mp.messaging.incoming.requests.auto.offset.reset=earliest
mp.messaging.incoming.requests.value.deserializer=io.quarkus.kafka.client.serialization.ObjectMapperDeserializer
#mp.messaging.incoming.requests.value.deserializer=rhpay.point.system.PaymentDeserializer
# Configure the Kafka source (we read from it)
mp.messaging.incoming.requests.interceptor.classes=io.opentracing.contrib.kafka.TracingConsumerInterceptor


quarkus.jaeger.service-name=point
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n 